name: Validate Commits Are in Stage

on:
  workflow_dispatch:
  pull_request:
    branches:
      - release/**

jobs:
  check-stage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch remote branches
        run: git fetch origin

      - name: Check that all commits from PR branch exist in stage
        run: |
          # Get source branch and target branch
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"
          BASE_SHA="${{ github.event.pull_request.base.sha }}"

          echo "PR base is: $BASE_SHA"
          echo "PR head is: $HEAD_SHA"

          # Get list of commits in the PR branch that are not in the base
          PR_COMMITS=$(git rev-list $BASE_SHA..$HEAD_SHA)

          echo "Commits in PR:"
          echo "$PR_COMMITS"

          # Loop over commits and check if each is in stage
          MISSING_IN_STAGE=0
          for COMMIT in $PR_COMMITS; do

            PARENTS=$(git rev-list --parents -n 1 $COMMIT | wc -w)

            if [ "PARENTS" -GT 2 ]; then
              echo "Skipping merge commit $COMMIT"
              continue
            fi

            if ! git branch -r --contains $COMMIT | grep -q 'origin/stage'; then
              echo "Commit $COMMIT is NOT in stage"
              MISSING_IN_STAGE=1
            else
              echo "Commit $COMMIT is in stage"
            fi
          done

          if [ "$MISSING_IN_STAGE" -eq 1 ]; then
            echo "Some commits are not in stage. You must deploy to staging first."
            exit 1
          else
            echo "All commits have been deployed to staging."
          fi
